|uart_calculator_top
clk => clk.IN3
rst => rst.IN4
rx => rx.IN1
seg[0] << uart_digit:uut4.seg
seg[1] << uart_digit:uut4.seg
seg[2] << uart_digit:uut4.seg
seg[3] << uart_digit:uut4.seg
seg[4] << uart_digit:uut4.seg
seg[5] << uart_digit:uut4.seg
seg[6] << uart_digit:uut4.seg
seg[7] << uart_digit:uut4.seg
digit[0] << uart_digit:uut4.digit
digit[1] << uart_digit:uut4.digit
digit[2] << uart_digit:uut4.digit
digit[3] << uart_digit:uut4.digit


|uart_calculator_top|uart_receive:uut1
clk => ready~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => rx_flag.CLK
clk => rx_data[0].CLK
clk => rx_data[1].CLK
clk => rx_data[2].CLK
clk => rx_data[3].CLK
clk => rx_data[4].CLK
clk => rx_data[5].CLK
clk => rx_data[6].CLK
clk => rx_data[7].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => bit_flag.CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => baud_cnt[12].CLK
clk => work_en.CLK
clk => start_nedge.CLK
clk => rx_reg3.CLK
clk => rx_reg2.CLK
clk => rx_reg1.CLK
rst => ready~reg0.ACLR
rst => data[0]~reg0.ACLR
rst => data[1]~reg0.ACLR
rst => data[2]~reg0.ACLR
rst => data[3]~reg0.ACLR
rst => data[4]~reg0.ACLR
rst => data[5]~reg0.ACLR
rst => data[6]~reg0.ACLR
rst => data[7]~reg0.ACLR
rst => rx_flag.ACLR
rst => rx_data[0].ACLR
rst => rx_data[1].ACLR
rst => rx_data[2].ACLR
rst => rx_data[3].ACLR
rst => rx_data[4].ACLR
rst => rx_data[5].ACLR
rst => rx_data[6].ACLR
rst => rx_data[7].ACLR
rst => bit_cnt[0].ACLR
rst => bit_cnt[1].ACLR
rst => bit_cnt[2].ACLR
rst => bit_cnt[3].ACLR
rst => bit_flag.ACLR
rst => baud_cnt[0].ACLR
rst => baud_cnt[1].ACLR
rst => baud_cnt[2].ACLR
rst => baud_cnt[3].ACLR
rst => baud_cnt[4].ACLR
rst => baud_cnt[5].ACLR
rst => baud_cnt[6].ACLR
rst => baud_cnt[7].ACLR
rst => baud_cnt[8].ACLR
rst => baud_cnt[9].ACLR
rst => baud_cnt[10].ACLR
rst => baud_cnt[11].ACLR
rst => baud_cnt[12].ACLR
rst => work_en.ACLR
rst => start_nedge.ACLR
rst => rx_reg3.PRESET
rst => rx_reg2.PRESET
rst => rx_reg1.PRESET
rx => rx_reg1.DATAIN
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_calculator_top|uart_calculator:uut2
clk => display_data[0]~reg0.CLK
clk => display_data[1]~reg0.CLK
clk => display_data[2]~reg0.CLK
clk => display_data[3]~reg0.CLK
clk => display_data[4]~reg0.CLK
clk => display_data[5]~reg0.CLK
clk => display_data[6]~reg0.CLK
clk => display_data[7]~reg0.CLK
clk => display_data[8]~reg0.CLK
clk => display_data[9]~reg0.CLK
clk => display_data[10]~reg0.CLK
clk => display_data[11]~reg0.CLK
clk => display_data[12]~reg0.CLK
clk => display_data[13]~reg0.CLK
clk => display_data[14]~reg0.CLK
clk => display_data[15]~reg0.CLK
clk => input_temp[0].CLK
clk => input_temp[1].CLK
clk => input_temp[2].CLK
clk => input_temp[3].CLK
clk => input_temp[4].CLK
clk => result[0].CLK
clk => result[1].CLK
clk => result[2].CLK
clk => result[3].CLK
clk => result[4].CLK
clk => result[5].CLK
clk => result[6].CLK
clk => result[7].CLK
clk => result[8].CLK
clk => result[9].CLK
clk => result[10].CLK
clk => result[11].CLK
clk => result[12].CLK
clk => result[13].CLK
clk => result[14].CLK
clk => result[15].CLK
clk => second_num[0].CLK
clk => second_num[1].CLK
clk => second_num[2].CLK
clk => second_num[3].CLK
clk => second_num[4].CLK
clk => second_num[5].CLK
clk => second_num[6].CLK
clk => second_num[7].CLK
clk => second_num[8].CLK
clk => second_num[9].CLK
clk => second_num[10].CLK
clk => second_num[11].CLK
clk => first_num[0].CLK
clk => first_num[1].CLK
clk => first_num[2].CLK
clk => first_num[3].CLK
clk => first_num[4].CLK
clk => first_num[5].CLK
clk => first_num[6].CLK
clk => first_num[7].CLK
clk => first_num[8].CLK
clk => first_num[9].CLK
clk => first_num[10].CLK
clk => first_num[11].CLK
clk => operator[0].CLK
clk => operator[1].CLK
clk => operator[2].CLK
clk => operator[3].CLK
clk => operator[4].CLK
clk => input_type~1.DATAIN
clk => FSM_state~6.DATAIN
rst => display_data[0]~reg0.ACLR
rst => display_data[1]~reg0.ACLR
rst => display_data[2]~reg0.ACLR
rst => display_data[3]~reg0.ACLR
rst => display_data[4]~reg0.ACLR
rst => display_data[5]~reg0.ACLR
rst => display_data[6]~reg0.ACLR
rst => display_data[7]~reg0.ACLR
rst => display_data[8]~reg0.ACLR
rst => display_data[9]~reg0.ACLR
rst => display_data[10]~reg0.ACLR
rst => display_data[11]~reg0.ACLR
rst => display_data[12]~reg0.ACLR
rst => display_data[13]~reg0.ACLR
rst => display_data[14]~reg0.ACLR
rst => display_data[15]~reg0.ACLR
rst => input_temp[0].ACLR
rst => input_temp[1].ACLR
rst => input_temp[2].ACLR
rst => input_temp[3].ACLR
rst => input_temp[4].ACLR
rst => second_num[0].ACLR
rst => second_num[1].ACLR
rst => second_num[2].ACLR
rst => second_num[3].ACLR
rst => second_num[4].ACLR
rst => second_num[5].ACLR
rst => second_num[6].ACLR
rst => second_num[7].ACLR
rst => second_num[8].ACLR
rst => second_num[9].ACLR
rst => second_num[10].ACLR
rst => second_num[11].ACLR
rst => first_num[0].ACLR
rst => first_num[1].ACLR
rst => first_num[2].ACLR
rst => first_num[3].ACLR
rst => first_num[4].ACLR
rst => first_num[5].ACLR
rst => first_num[6].ACLR
rst => first_num[7].ACLR
rst => first_num[8].ACLR
rst => first_num[9].ACLR
rst => first_num[10].ACLR
rst => first_num[11].ACLR
rst => operator[0].ACLR
rst => operator[1].ACLR
rst => operator[2].ACLR
rst => operator[3].ACLR
rst => operator[4].ACLR
rst => input_type~3.DATAIN
rst => FSM_state~8.DATAIN
rst => result[15].ENA
rst => result[14].ENA
rst => result[13].ENA
rst => result[12].ENA
rst => result[11].ENA
rst => result[10].ENA
rst => result[9].ENA
rst => result[8].ENA
rst => result[7].ENA
rst => result[6].ENA
rst => result[5].ENA
rst => result[4].ENA
rst => result[3].ENA
rst => result[2].ENA
rst => result[1].ENA
rst => result[0].ENA
ready => input_type.OUTPUTSELECT
ready => input_type.OUTPUTSELECT
ready => input_type.OUTPUTSELECT
ready => input_type.OUTPUTSELECT
ready => input_type.OUTPUTSELECT
ready => input_temp.OUTPUTSELECT
ready => input_temp.OUTPUTSELECT
ready => input_temp.OUTPUTSELECT
ready => input_temp.OUTPUTSELECT
ready => input_temp.OUTPUTSELECT
rx_data[0] => Decoder1.IN7
rx_data[1] => Decoder1.IN6
rx_data[2] => Decoder1.IN5
rx_data[3] => Decoder1.IN4
rx_data[4] => Decoder1.IN3
rx_data[5] => Decoder1.IN2
rx_data[6] => Decoder1.IN1
rx_data[7] => Decoder1.IN0
display_data[0] <= display_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[1] <= display_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[2] <= display_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[3] <= display_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[4] <= display_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[5] <= display_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[6] <= display_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[7] <= display_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[8] <= display_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[9] <= display_data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[10] <= display_data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[11] <= display_data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[12] <= display_data[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[13] <= display_data[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[14] <= display_data[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_data[15] <= display_data[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_calculator_top|uart3_fre_div:uut3
clk => clk_div_cnt[0].CLK
clk => clk_div_cnt[1].CLK
clk => clk_div_cnt[2].CLK
clk => clk_div_cnt[3].CLK
clk => clk_div_cnt[4].CLK
clk => clk_div_cnt[5].CLK
clk => clk_div_cnt[6].CLK
clk => clk_div_cnt[7].CLK
clk => clk_div_cnt[8].CLK
clk => clk_div_cnt[9].CLK
clk => clk_div_cnt[10].CLK
clk => clk_div_cnt[11].CLK
clk => clk_div_cnt[12].CLK
clk => clk_div_cnt[13].CLK
clk => clk_div_cnt[14].CLK
clk => clk_div_cnt[15].CLK
clk => clk_div_cnt[16].CLK
clk => clk_div_cnt[17].CLK
clk => clk_div_cnt[18].CLK
clk => clk_div_cnt[19].CLK
clk => clk_div_cnt[20].CLK
clk => clk_div_cnt[21].CLK
clk => clk_div_cnt[22].CLK
clk => clk_div_cnt[23].CLK
clk => clk_div_cnt[24].CLK
clk => clk_div~reg0.CLK
rst => clk_div_cnt[0].ACLR
rst => clk_div_cnt[1].ACLR
rst => clk_div_cnt[2].ACLR
rst => clk_div_cnt[3].ACLR
rst => clk_div_cnt[4].ACLR
rst => clk_div_cnt[5].ACLR
rst => clk_div_cnt[6].ACLR
rst => clk_div_cnt[7].ACLR
rst => clk_div_cnt[8].ACLR
rst => clk_div_cnt[9].ACLR
rst => clk_div_cnt[10].ACLR
rst => clk_div_cnt[11].ACLR
rst => clk_div_cnt[12].ACLR
rst => clk_div_cnt[13].ACLR
rst => clk_div_cnt[14].ACLR
rst => clk_div_cnt[15].ACLR
rst => clk_div_cnt[16].ACLR
rst => clk_div_cnt[17].ACLR
rst => clk_div_cnt[18].ACLR
rst => clk_div_cnt[19].ACLR
rst => clk_div_cnt[20].ACLR
rst => clk_div_cnt[21].ACLR
rst => clk_div_cnt[22].ACLR
rst => clk_div_cnt[23].ACLR
rst => clk_div_cnt[24].ACLR
rst => clk_div~reg0.ACLR
clk_div <= clk_div~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_calculator_top|uart_digit:uut4
clk => seg[0]~reg0.CLK
clk => seg[1]~reg0.CLK
clk => seg[2]~reg0.CLK
clk => seg[3]~reg0.CLK
clk => seg[4]~reg0.CLK
clk => seg[5]~reg0.CLK
clk => seg[6]~reg0.CLK
clk => seg[7]~reg0.CLK
clk => data_temp[0].CLK
clk => data_temp[1].CLK
clk => data_temp[2].CLK
clk => data_temp[3].CLK
clk => data_temp[4].CLK
clk => data_temp[5].CLK
clk => data_temp[6].CLK
clk => data_temp[7].CLK
clk => data_temp[8].CLK
clk => data_temp[9].CLK
clk => data_temp[10].CLK
clk => data_temp[11].CLK
clk => data_temp[12].CLK
clk => data_temp[13].CLK
clk => data_temp[14].CLK
clk => data_temp[15].CLK
clk => digit[0]~reg0.CLK
clk => digit[1]~reg0.CLK
clk => digit[2]~reg0.CLK
clk => digit[3]~reg0.CLK
clk => state1~1.DATAIN
rst => seg[0]~reg0.ACLR
rst => seg[1]~reg0.ACLR
rst => seg[2]~reg0.ACLR
rst => seg[3]~reg0.ACLR
rst => seg[4]~reg0.ACLR
rst => seg[5]~reg0.ACLR
rst => seg[6]~reg0.PRESET
rst => seg[7]~reg0.PRESET
rst => data_temp[0].ACLR
rst => data_temp[1].ACLR
rst => data_temp[2].ACLR
rst => data_temp[3].ACLR
rst => data_temp[4].ACLR
rst => data_temp[5].ACLR
rst => data_temp[6].ACLR
rst => data_temp[7].ACLR
rst => data_temp[8].ACLR
rst => data_temp[9].ACLR
rst => data_temp[10].ACLR
rst => data_temp[11].ACLR
rst => data_temp[12].ACLR
rst => data_temp[13].ACLR
rst => data_temp[14].ACLR
rst => data_temp[15].ACLR
rst => digit[0]~reg0.PRESET
rst => digit[1]~reg0.PRESET
rst => digit[2]~reg0.PRESET
rst => digit[3]~reg0.PRESET
rst => state1~3.DATAIN
data[0] => Selector3.IN3
data[1] => Selector2.IN3
data[2] => Selector1.IN3
data[3] => Selector0.IN3
data[4] => Selector3.IN2
data[5] => Selector2.IN2
data[6] => Selector1.IN2
data[7] => Selector0.IN2
data[8] => Selector3.IN1
data[9] => Selector2.IN1
data[10] => Selector1.IN1
data[11] => Selector0.IN1
data[12] => Selector3.IN0
data[13] => Selector2.IN0
data[14] => Selector1.IN0
data[15] => Selector0.IN0
digit[0] <= digit[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[1] <= digit[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[2] <= digit[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[3] <= digit[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= seg[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


