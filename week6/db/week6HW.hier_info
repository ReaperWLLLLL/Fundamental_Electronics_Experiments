|task2_4
clk => segment[0]~reg0.CLK
clk => segment[1]~reg0.CLK
clk => segment[2]~reg0.CLK
clk => segment[3]~reg0.CLK
clk => segment[4]~reg0.CLK
clk => segment[5]~reg0.CLK
clk => segment[6]~reg0.CLK
clk => segment[7]~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => cnt[21].CLK
clk => cnt[22].CLK
clk => cnt[23].CLK
clk => cnt[24].CLK
clk => cnt[25].CLK
clk => cnt[26].CLK
clk => cnt[27].CLK
clk => cnt[28].CLK
clk => cnt[29].CLK
clk => cnt[30].CLK
clk => cnt[31].CLK
clk => clk_div~reg0.CLK
clk => div_reg[0].CLK
clk => div_reg[1].CLK
clk => div_reg[2].CLK
clk => div_reg[3].CLK
clk => div_reg[4].CLK
clk => div_reg[5].CLK
clk => div_reg[6].CLK
clk => div_reg[7].CLK
clk => div_reg[8].CLK
clk => div_reg[9].CLK
clk => div_reg[10].CLK
clk => div_reg[11].CLK
clk => div_reg[12].CLK
clk => div_reg[13].CLK
clk => div_reg[14].CLK
clk => div_reg[15].CLK
clk => div_reg[16].CLK
clk => div_reg[17].CLK
clk => div_reg[18].CLK
clk => div_reg[19].CLK
clk => div_reg[20].CLK
clk => div_reg[21].CLK
clk => div_reg[22].CLK
clk => div_reg[23].CLK
clk => div_reg[24].CLK
clk => div_reg[25].CLK
clk => div_reg[26].CLK
clk => div_reg[27].CLK
clk => div_reg[28].CLK
clk => div_reg[29].CLK
clk => div_reg[30].CLK
clk => div_reg[31].CLK
clk => buzz~reg0.CLK
clk => buzz_flag.CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
clk => data[15].CLK
clk => real_time[0].CLK
clk => real_time[1].CLK
clk => real_time[2].CLK
clk => real_time[3].CLK
clk => real_time[4].CLK
clk => real_time[5].CLK
clk => real_time[6].CLK
clk => real_time[7].CLK
reset => segment[0]~reg0.ACLR
reset => segment[1]~reg0.ACLR
reset => segment[2]~reg0.ACLR
reset => segment[3]~reg0.ACLR
reset => segment[4]~reg0.ACLR
reset => segment[5]~reg0.ACLR
reset => segment[6]~reg0.ACLR
reset => segment[7]~reg0.ACLR
reset => digit[0]~reg0.PRESET
reset => digit[1]~reg0.PRESET
reset => digit[2]~reg0.PRESET
reset => digit[3]~reg0.PRESET
reset => data_temp[0].ACLR
reset => data_temp[1].ACLR
reset => data_temp[2].ACLR
reset => data_temp[3].ACLR
reset => cnt[0].ACLR
reset => cnt[1].ACLR
reset => cnt[2].ACLR
reset => cnt[3].ACLR
reset => cnt[4].ACLR
reset => cnt[5].ACLR
reset => cnt[6].ACLR
reset => cnt[7].ACLR
reset => cnt[8].ACLR
reset => cnt[9].ACLR
reset => cnt[10].ACLR
reset => cnt[11].ACLR
reset => cnt[12].ACLR
reset => cnt[13].ACLR
reset => cnt[14].ACLR
reset => cnt[15].ACLR
reset => cnt[16].ACLR
reset => cnt[17].ACLR
reset => cnt[18].ACLR
reset => cnt[19].ACLR
reset => cnt[20].ACLR
reset => cnt[21].ACLR
reset => cnt[22].ACLR
reset => cnt[23].ACLR
reset => cnt[24].ACLR
reset => cnt[25].ACLR
reset => cnt[26].ACLR
reset => cnt[27].ACLR
reset => cnt[28].ACLR
reset => cnt[29].ACLR
reset => cnt[30].ACLR
reset => cnt[31].ACLR
reset => clk_div~reg0.ACLR
reset => div_reg[0].ACLR
reset => div_reg[1].ACLR
reset => div_reg[2].ACLR
reset => div_reg[3].ACLR
reset => div_reg[4].ACLR
reset => div_reg[5].ACLR
reset => div_reg[6].ACLR
reset => div_reg[7].ACLR
reset => div_reg[8].ACLR
reset => div_reg[9].ACLR
reset => div_reg[10].ACLR
reset => div_reg[11].ACLR
reset => div_reg[12].ACLR
reset => div_reg[13].ACLR
reset => div_reg[14].ACLR
reset => div_reg[15].ACLR
reset => div_reg[16].ACLR
reset => div_reg[17].ACLR
reset => div_reg[18].ACLR
reset => div_reg[19].ACLR
reset => div_reg[20].ACLR
reset => div_reg[21].ACLR
reset => div_reg[22].ACLR
reset => div_reg[23].ACLR
reset => div_reg[24].ACLR
reset => div_reg[25].ACLR
reset => div_reg[26].ACLR
reset => div_reg[27].ACLR
reset => div_reg[28].ACLR
reset => div_reg[29].ACLR
reset => div_reg[30].ACLR
reset => div_reg[31].ACLR
reset => buzz~reg0.PRESET
reset => buzz_flag.ACLR
reset => data[0].ALOAD
reset => data[1].ALOAD
reset => data[2].ALOAD
reset => data[3].ALOAD
reset => data[4].ALOAD
reset => data[5].ALOAD
reset => data[6].ALOAD
reset => data[7].ALOAD
reset => data[8].ALOAD
reset => data[9].ALOAD
reset => data[10].ALOAD
reset => data[11].ALOAD
reset => data[12].ALOAD
reset => data[13].ALOAD
reset => data[14].ALOAD
reset => data[15].ALOAD
reset => real_time[0].ALOAD
reset => real_time[1].ALOAD
reset => real_time[2].ALOAD
reset => real_time[3].ALOAD
reset => real_time[4].ALOAD
reset => real_time[5].ALOAD
reset => real_time[6].ALOAD
reset => real_time[7].ALOAD
reset => state~3.DATAIN
switch_io[0] => Mod1.IN13
switch_io[0] => Div1.IN13
switch_io[0] => real_time[0].ADATA
switch_io[1] => Mod1.IN12
switch_io[1] => Div1.IN12
switch_io[1] => real_time[1].ADATA
switch_io[2] => Mod1.IN11
switch_io[2] => Div1.IN11
switch_io[2] => real_time[2].ADATA
switch_io[3] => Mod1.IN10
switch_io[3] => Div1.IN10
switch_io[3] => real_time[3].ADATA
switch_io[4] => Mod1.IN9
switch_io[4] => Div1.IN9
switch_io[4] => real_time[4].ADATA
switch_io[5] => Mod1.IN8
switch_io[5] => Div1.IN8
switch_io[5] => real_time[5].ADATA
switch_io[6] => Mod1.IN7
switch_io[6] => Div1.IN7
switch_io[6] => real_time[6].ADATA
switch_io[7] => Mod1.IN6
switch_io[7] => Div1.IN6
switch_io[7] => real_time[7].ADATA
clk_div << clk_div~reg0.DB_MAX_OUTPUT_PORT_TYPE
buzz << buzz~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[0] << digit[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[1] << digit[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[2] << digit[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[3] << digit[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment[0] << segment[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment[1] << segment[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment[2] << segment[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment[3] << segment[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment[4] << segment[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment[5] << segment[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment[6] << segment[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
segment[7] << segment[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


