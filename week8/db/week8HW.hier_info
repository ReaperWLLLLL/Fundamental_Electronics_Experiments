|task2_2_top
clk => clk.IN1
rst => rst.IN3
clk_div_out <= clk_div_out.DB_MAX_OUTPUT_PORT_TYPE
clk_div_out1 <= clk_div_out1.DB_MAX_OUTPUT_PORT_TYPE
digit[0] <= digit1:uut4.digit
digit[1] <= digit1:uut4.digit
digit[2] <= digit1:uut4.digit
digit[3] <= digit1:uut4.digit
seg[0] <= digit1:uut4.seg
seg[1] <= digit1:uut4.seg
seg[2] <= digit1:uut4.seg
seg[3] <= digit1:uut4.seg
seg[4] <= digit1:uut4.seg
seg[5] <= digit1:uut4.seg
seg[6] <= digit1:uut4.seg
seg[7] <= digit1:uut4.seg
addr[0] <= addr[0].DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= addr[1].DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= addr[2].DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= addr[3].DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= addr[4].DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= addr[5].DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= addr[6].DB_MAX_OUTPUT_PORT_TYPE
addr[7] <= addr[7].DB_MAX_OUTPUT_PORT_TYPE


|task2_2_top|myrom:uut1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|task2_2_top|myrom:uut1|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_e0e1:auto_generated.address_a[0]
address_a[1] => altsyncram_e0e1:auto_generated.address_a[1]
address_a[2] => altsyncram_e0e1:auto_generated.address_a[2]
address_a[3] => altsyncram_e0e1:auto_generated.address_a[3]
address_a[4] => altsyncram_e0e1:auto_generated.address_a[4]
address_a[5] => altsyncram_e0e1:auto_generated.address_a[5]
address_a[6] => altsyncram_e0e1:auto_generated.address_a[6]
address_a[7] => altsyncram_e0e1:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_e0e1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_e0e1:auto_generated.q_a[0]
q_a[1] <= altsyncram_e0e1:auto_generated.q_a[1]
q_a[2] <= altsyncram_e0e1:auto_generated.q_a[2]
q_a[3] <= altsyncram_e0e1:auto_generated.q_a[3]
q_a[4] <= altsyncram_e0e1:auto_generated.q_a[4]
q_a[5] <= altsyncram_e0e1:auto_generated.q_a[5]
q_a[6] <= altsyncram_e0e1:auto_generated.q_a[6]
q_a[7] <= altsyncram_e0e1:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|task2_2_top|myrom:uut1|altsyncram:altsyncram_component|altsyncram_e0e1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|task2_2_top|addrgen:uut2
clk => addr[0]~reg0.CLK
clk => addr[1]~reg0.CLK
clk => addr[2]~reg0.CLK
clk => addr[3]~reg0.CLK
clk => addr[4]~reg0.CLK
clk => addr[5]~reg0.CLK
clk => addr[6]~reg0.CLK
clk => addr[7]~reg0.CLK
rst => addr[0]~reg0.ACLR
rst => addr[1]~reg0.ACLR
rst => addr[2]~reg0.ACLR
rst => addr[3]~reg0.ACLR
rst => addr[4]~reg0.ACLR
rst => addr[5]~reg0.ACLR
rst => addr[6]~reg0.ACLR
rst => addr[7]~reg0.ACLR
addr[0] <= addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= addr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= addr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[5] <= addr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[6] <= addr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr[7] <= addr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|task2_2_top|fre_div2_2:uut3
clk => clk_div_out1~reg0.CLK
clk => div_cnt1[0].CLK
clk => div_cnt1[1].CLK
clk => div_cnt1[2].CLK
clk => div_cnt1[3].CLK
clk => div_cnt1[4].CLK
clk => div_cnt1[5].CLK
clk => div_cnt1[6].CLK
clk => div_cnt1[7].CLK
clk => div_cnt1[8].CLK
clk => div_cnt1[9].CLK
clk => div_cnt1[10].CLK
clk => div_cnt1[11].CLK
clk => div_cnt1[12].CLK
clk => div_cnt1[13].CLK
clk => div_cnt1[14].CLK
clk => div_cnt1[15].CLK
clk => div_cnt1[16].CLK
clk => div_cnt1[17].CLK
clk => div_cnt1[18].CLK
clk => div_cnt1[19].CLK
clk => div_cnt1[20].CLK
clk => div_cnt1[21].CLK
clk => div_cnt1[22].CLK
clk => div_cnt1[23].CLK
clk => div_cnt1[24].CLK
clk => div_cnt1[25].CLK
clk => div_cnt1[26].CLK
clk => div_cnt1[27].CLK
clk => div_cnt1[28].CLK
clk => div_cnt1[29].CLK
clk => div_cnt1[30].CLK
clk => div_cnt1[31].CLK
clk => clk_div_out~reg0.CLK
clk => div_cnt[0].CLK
clk => div_cnt[1].CLK
clk => div_cnt[2].CLK
clk => div_cnt[3].CLK
clk => div_cnt[4].CLK
clk => div_cnt[5].CLK
clk => div_cnt[6].CLK
clk => div_cnt[7].CLK
clk => div_cnt[8].CLK
clk => div_cnt[9].CLK
clk => div_cnt[10].CLK
clk => div_cnt[11].CLK
clk => div_cnt[12].CLK
clk => div_cnt[13].CLK
clk => div_cnt[14].CLK
clk => div_cnt[15].CLK
clk => div_cnt[16].CLK
clk => div_cnt[17].CLK
clk => div_cnt[18].CLK
clk => div_cnt[19].CLK
clk => div_cnt[20].CLK
clk => div_cnt[21].CLK
clk => div_cnt[22].CLK
clk => div_cnt[23].CLK
clk => div_cnt[24].CLK
clk => div_cnt[25].CLK
clk => div_cnt[26].CLK
clk => div_cnt[27].CLK
clk => div_cnt[28].CLK
clk => div_cnt[29].CLK
clk => div_cnt[30].CLK
clk => div_cnt[31].CLK
rst => clk_div_out1~reg0.ACLR
rst => div_cnt1[0].ACLR
rst => div_cnt1[1].ACLR
rst => div_cnt1[2].ACLR
rst => div_cnt1[3].ACLR
rst => div_cnt1[4].ACLR
rst => div_cnt1[5].ACLR
rst => div_cnt1[6].ACLR
rst => div_cnt1[7].ACLR
rst => div_cnt1[8].ACLR
rst => div_cnt1[9].ACLR
rst => div_cnt1[10].ACLR
rst => div_cnt1[11].ACLR
rst => div_cnt1[12].ACLR
rst => div_cnt1[13].ACLR
rst => div_cnt1[14].ACLR
rst => div_cnt1[15].ACLR
rst => div_cnt1[16].ACLR
rst => div_cnt1[17].ACLR
rst => div_cnt1[18].ACLR
rst => div_cnt1[19].ACLR
rst => div_cnt1[20].ACLR
rst => div_cnt1[21].ACLR
rst => div_cnt1[22].ACLR
rst => div_cnt1[23].ACLR
rst => div_cnt1[24].ACLR
rst => div_cnt1[25].ACLR
rst => div_cnt1[26].ACLR
rst => div_cnt1[27].ACLR
rst => div_cnt1[28].ACLR
rst => div_cnt1[29].ACLR
rst => div_cnt1[30].ACLR
rst => div_cnt1[31].ACLR
rst => clk_div_out~reg0.ACLR
rst => div_cnt[0].ACLR
rst => div_cnt[1].ACLR
rst => div_cnt[2].ACLR
rst => div_cnt[3].ACLR
rst => div_cnt[4].ACLR
rst => div_cnt[5].ACLR
rst => div_cnt[6].ACLR
rst => div_cnt[7].ACLR
rst => div_cnt[8].ACLR
rst => div_cnt[9].ACLR
rst => div_cnt[10].ACLR
rst => div_cnt[11].ACLR
rst => div_cnt[12].ACLR
rst => div_cnt[13].ACLR
rst => div_cnt[14].ACLR
rst => div_cnt[15].ACLR
rst => div_cnt[16].ACLR
rst => div_cnt[17].ACLR
rst => div_cnt[18].ACLR
rst => div_cnt[19].ACLR
rst => div_cnt[20].ACLR
rst => div_cnt[21].ACLR
rst => div_cnt[22].ACLR
rst => div_cnt[23].ACLR
rst => div_cnt[24].ACLR
rst => div_cnt[25].ACLR
rst => div_cnt[26].ACLR
rst => div_cnt[27].ACLR
rst => div_cnt[28].ACLR
rst => div_cnt[29].ACLR
rst => div_cnt[30].ACLR
rst => div_cnt[31].ACLR
clk_div_out <= clk_div_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_div_out1 <= clk_div_out1~reg0.DB_MAX_OUTPUT_PORT_TYPE


|task2_2_top|digit1:uut4
clk => seg[0]~reg0.CLK
clk => seg[1]~reg0.CLK
clk => seg[2]~reg0.CLK
clk => seg[3]~reg0.CLK
clk => seg[4]~reg0.CLK
clk => seg[5]~reg0.CLK
clk => seg[6]~reg0.CLK
clk => seg[7]~reg0.CLK
clk => data_temp[0].CLK
clk => data_temp[1].CLK
clk => data_temp[2].CLK
clk => data_temp[3].CLK
clk => digit[0]~reg0.CLK
clk => digit[1]~reg0.CLK
clk => digit[2]~reg0.CLK
clk => digit[3]~reg0.CLK
clk => state~1.DATAIN
rst => seg[0]~reg0.ACLR
rst => seg[1]~reg0.ACLR
rst => seg[2]~reg0.ACLR
rst => seg[3]~reg0.ACLR
rst => seg[4]~reg0.ACLR
rst => seg[5]~reg0.ACLR
rst => seg[6]~reg0.PRESET
rst => seg[7]~reg0.PRESET
rst => digit[0]~reg0.PRESET
rst => digit[1]~reg0.PRESET
rst => digit[2]~reg0.PRESET
rst => digit[3]~reg0.PRESET
rst => state~3.DATAIN
rst => data_temp[3].ENA
rst => data_temp[2].ENA
rst => data_temp[1].ENA
rst => data_temp[0].ENA
data[0] => Selector3.IN3
data[1] => Selector2.IN3
data[2] => Selector1.IN3
data[3] => Selector0.IN3
data[4] => Selector3.IN2
data[5] => Selector2.IN2
data[6] => Selector1.IN2
data[7] => Selector0.IN2
digit[0] <= digit[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[1] <= digit[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[2] <= digit[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[3] <= digit[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= seg[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


