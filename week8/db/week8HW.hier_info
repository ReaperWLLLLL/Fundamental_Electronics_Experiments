|task1_2_top
clk => clk.IN1
rst => rst.IN2
vl[0] => vl[0].IN1
vl[1] => vl[1].IN1
vl[2] => vl[2].IN1
vl[3] => vl[3].IN1
hl[0] <= my_key_seg1:uut_my_key_seg.hl
hl[1] <= my_key_seg1:uut_my_key_seg.hl
hl[2] <= my_key_seg1:uut_my_key_seg.hl
hl[3] <= my_key_seg1:uut_my_key_seg.hl
digit[0] <= my_key_seg1:uut_my_key_seg.digit
digit[1] <= my_key_seg1:uut_my_key_seg.digit
digit[2] <= my_key_seg1:uut_my_key_seg.digit
digit[3] <= my_key_seg1:uut_my_key_seg.digit
seg[0] <= my_key_seg1:uut_my_key_seg.seg
seg[1] <= my_key_seg1:uut_my_key_seg.seg
seg[2] <= my_key_seg1:uut_my_key_seg.seg
seg[3] <= my_key_seg1:uut_my_key_seg.seg
seg[4] <= my_key_seg1:uut_my_key_seg.seg
seg[5] <= my_key_seg1:uut_my_key_seg.seg
seg[6] <= my_key_seg1:uut_my_key_seg.seg
seg[7] <= my_key_seg1:uut_my_key_seg.seg


|task1_2_top|my_key_fre_div:uut_fre_div
clk => clk_div_out1~reg0.CLK
clk => div_cnt1[0].CLK
clk => div_cnt1[1].CLK
clk => div_cnt1[2].CLK
clk => div_cnt1[3].CLK
clk => div_cnt1[4].CLK
clk => div_cnt1[5].CLK
clk => div_cnt1[6].CLK
clk => div_cnt1[7].CLK
clk => div_cnt1[8].CLK
clk => div_cnt1[9].CLK
clk => div_cnt1[10].CLK
clk => div_cnt1[11].CLK
clk => div_cnt1[12].CLK
clk => div_cnt1[13].CLK
clk => div_cnt1[14].CLK
clk => div_cnt1[15].CLK
clk => div_cnt1[16].CLK
clk => div_cnt1[17].CLK
clk => div_cnt1[18].CLK
clk => div_cnt1[19].CLK
clk => div_cnt1[20].CLK
clk => div_cnt1[21].CLK
clk => div_cnt1[22].CLK
clk => div_cnt1[23].CLK
clk => div_cnt1[24].CLK
clk => div_cnt1[25].CLK
clk => div_cnt1[26].CLK
clk => div_cnt1[27].CLK
clk => div_cnt1[28].CLK
clk => div_cnt1[29].CLK
clk => div_cnt1[30].CLK
clk => div_cnt1[31].CLK
clk => clk_div_out~reg0.CLK
clk => div_cnt[0].CLK
clk => div_cnt[1].CLK
clk => div_cnt[2].CLK
clk => div_cnt[3].CLK
clk => div_cnt[4].CLK
clk => div_cnt[5].CLK
clk => div_cnt[6].CLK
clk => div_cnt[7].CLK
clk => div_cnt[8].CLK
clk => div_cnt[9].CLK
clk => div_cnt[10].CLK
clk => div_cnt[11].CLK
clk => div_cnt[12].CLK
clk => div_cnt[13].CLK
clk => div_cnt[14].CLK
clk => div_cnt[15].CLK
clk => div_cnt[16].CLK
clk => div_cnt[17].CLK
clk => div_cnt[18].CLK
clk => div_cnt[19].CLK
clk => div_cnt[20].CLK
clk => div_cnt[21].CLK
clk => div_cnt[22].CLK
clk => div_cnt[23].CLK
clk => div_cnt[24].CLK
clk => div_cnt[25].CLK
clk => div_cnt[26].CLK
clk => div_cnt[27].CLK
clk => div_cnt[28].CLK
clk => div_cnt[29].CLK
clk => div_cnt[30].CLK
clk => div_cnt[31].CLK
rst => clk_div_out1~reg0.ACLR
rst => div_cnt1[0].ACLR
rst => div_cnt1[1].ACLR
rst => div_cnt1[2].ACLR
rst => div_cnt1[3].ACLR
rst => div_cnt1[4].ACLR
rst => div_cnt1[5].ACLR
rst => div_cnt1[6].ACLR
rst => div_cnt1[7].ACLR
rst => div_cnt1[8].ACLR
rst => div_cnt1[9].ACLR
rst => div_cnt1[10].ACLR
rst => div_cnt1[11].ACLR
rst => div_cnt1[12].ACLR
rst => div_cnt1[13].ACLR
rst => div_cnt1[14].ACLR
rst => div_cnt1[15].ACLR
rst => div_cnt1[16].ACLR
rst => div_cnt1[17].ACLR
rst => div_cnt1[18].ACLR
rst => div_cnt1[19].ACLR
rst => div_cnt1[20].ACLR
rst => div_cnt1[21].ACLR
rst => div_cnt1[22].ACLR
rst => div_cnt1[23].ACLR
rst => div_cnt1[24].ACLR
rst => div_cnt1[25].ACLR
rst => div_cnt1[26].ACLR
rst => div_cnt1[27].ACLR
rst => div_cnt1[28].ACLR
rst => div_cnt1[29].ACLR
rst => div_cnt1[30].ACLR
rst => div_cnt1[31].ACLR
rst => clk_div_out~reg0.ACLR
rst => div_cnt[0].ACLR
rst => div_cnt[1].ACLR
rst => div_cnt[2].ACLR
rst => div_cnt[3].ACLR
rst => div_cnt[4].ACLR
rst => div_cnt[5].ACLR
rst => div_cnt[6].ACLR
rst => div_cnt[7].ACLR
rst => div_cnt[8].ACLR
rst => div_cnt[9].ACLR
rst => div_cnt[10].ACLR
rst => div_cnt[11].ACLR
rst => div_cnt[12].ACLR
rst => div_cnt[13].ACLR
rst => div_cnt[14].ACLR
rst => div_cnt[15].ACLR
rst => div_cnt[16].ACLR
rst => div_cnt[17].ACLR
rst => div_cnt[18].ACLR
rst => div_cnt[19].ACLR
rst => div_cnt[20].ACLR
rst => div_cnt[21].ACLR
rst => div_cnt[22].ACLR
rst => div_cnt[23].ACLR
rst => div_cnt[24].ACLR
rst => div_cnt[25].ACLR
rst => div_cnt[26].ACLR
rst => div_cnt[27].ACLR
rst => div_cnt[28].ACLR
rst => div_cnt[29].ACLR
rst => div_cnt[30].ACLR
rst => div_cnt[31].ACLR
clk_div_out <= clk_div_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_div_out1 <= clk_div_out1~reg0.DB_MAX_OUTPUT_PORT_TYPE


|task1_2_top|my_key_seg1:uut_my_key_seg
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
clk => data[15].CLK
clk => input_temp[0].CLK
clk => input_temp[1].CLK
clk => input_temp[2].CLK
clk => input_temp[3].CLK
clk => input_temp[4].CLK
clk => result[0].CLK
clk => result[1].CLK
clk => result[2].CLK
clk => result[3].CLK
clk => result[4].CLK
clk => result[5].CLK
clk => result[6].CLK
clk => result[7].CLK
clk => result[8].CLK
clk => result[9].CLK
clk => result[10].CLK
clk => result[11].CLK
clk => result[12].CLK
clk => result[13].CLK
clk => result[14].CLK
clk => result[15].CLK
clk => second_num[0].CLK
clk => second_num[1].CLK
clk => second_num[2].CLK
clk => second_num[3].CLK
clk => second_num[4].CLK
clk => second_num[5].CLK
clk => second_num[6].CLK
clk => second_num[7].CLK
clk => second_num[8].CLK
clk => second_num[9].CLK
clk => second_num[10].CLK
clk => second_num[11].CLK
clk => first_num[0].CLK
clk => first_num[1].CLK
clk => first_num[2].CLK
clk => first_num[3].CLK
clk => first_num[4].CLK
clk => first_num[5].CLK
clk => first_num[6].CLK
clk => first_num[7].CLK
clk => first_num[8].CLK
clk => first_num[9].CLK
clk => first_num[10].CLK
clk => first_num[11].CLK
clk => operator[0].CLK
clk => operator[1].CLK
clk => operator[2].CLK
clk => operator[3].CLK
clk => operator[4].CLK
clk => hl[0]~reg0.CLK
clk => hl[1]~reg0.CLK
clk => hl[2]~reg0.CLK
clk => hl[3]~reg0.CLK
clk => input_type~1.DATAIN
clk => FSM_state~5.DATAIN
clk => state~1.DATAIN
clk1 => seg[0]~reg0.CLK
clk1 => seg[1]~reg0.CLK
clk1 => seg[2]~reg0.CLK
clk1 => seg[3]~reg0.CLK
clk1 => seg[4]~reg0.CLK
clk1 => seg[5]~reg0.CLK
clk1 => seg[6]~reg0.CLK
clk1 => seg[7]~reg0.CLK
clk1 => data_temp[0].CLK
clk1 => data_temp[1].CLK
clk1 => data_temp[2].CLK
clk1 => data_temp[3].CLK
clk1 => digit[0]~reg0.CLK
clk1 => digit[1]~reg0.CLK
clk1 => digit[2]~reg0.CLK
clk1 => digit[3]~reg0.CLK
clk1 => state1~1.DATAIN
rst => seg[0]~reg0.ACLR
rst => seg[1]~reg0.ACLR
rst => seg[2]~reg0.ACLR
rst => seg[3]~reg0.ACLR
rst => seg[4]~reg0.ACLR
rst => seg[5]~reg0.ACLR
rst => seg[6]~reg0.PRESET
rst => seg[7]~reg0.PRESET
rst => data[0].ACLR
rst => data[1].ACLR
rst => data[2].ACLR
rst => data[3].ACLR
rst => data[4].ACLR
rst => data[5].ACLR
rst => data[6].ACLR
rst => data[7].ACLR
rst => data[8].ACLR
rst => data[9].ACLR
rst => data[10].ACLR
rst => data[11].ACLR
rst => data[12].ACLR
rst => data[13].ACLR
rst => data[14].ACLR
rst => data[15].ACLR
rst => input_temp[0].ACLR
rst => input_temp[1].ACLR
rst => input_temp[2].ACLR
rst => input_temp[3].ACLR
rst => input_temp[4].ACLR
rst => second_num[0].ACLR
rst => second_num[1].ACLR
rst => second_num[2].ACLR
rst => second_num[3].ACLR
rst => second_num[4].ACLR
rst => second_num[5].ACLR
rst => second_num[6].ACLR
rst => second_num[7].ACLR
rst => second_num[8].ACLR
rst => second_num[9].ACLR
rst => second_num[10].ACLR
rst => second_num[11].ACLR
rst => first_num[0].ACLR
rst => first_num[1].ACLR
rst => first_num[2].ACLR
rst => first_num[3].ACLR
rst => first_num[4].ACLR
rst => first_num[5].ACLR
rst => first_num[6].ACLR
rst => first_num[7].ACLR
rst => first_num[8].ACLR
rst => first_num[9].ACLR
rst => first_num[10].ACLR
rst => first_num[11].ACLR
rst => operator[0].ACLR
rst => operator[1].ACLR
rst => operator[2].ACLR
rst => operator[3].ACLR
rst => operator[4].ACLR
rst => hl[0]~reg0.PRESET
rst => hl[1]~reg0.PRESET
rst => hl[2]~reg0.PRESET
rst => hl[3]~reg0.PRESET
rst => data_temp[0].ACLR
rst => data_temp[1].ACLR
rst => data_temp[2].ACLR
rst => data_temp[3].ACLR
rst => digit[0]~reg0.PRESET
rst => digit[1]~reg0.PRESET
rst => digit[2]~reg0.PRESET
rst => digit[3]~reg0.PRESET
rst => input_type~3.DATAIN
rst => FSM_state~7.DATAIN
rst => state~3.DATAIN
rst => state1~3.DATAIN
rst => result[15].ENA
rst => result[14].ENA
rst => result[13].ENA
rst => result[12].ENA
rst => result[11].ENA
rst => result[10].ENA
rst => result[9].ENA
rst => result[8].ENA
rst => result[7].ENA
rst => result[6].ENA
rst => result[5].ENA
rst => result[4].ENA
rst => result[3].ENA
rst => result[2].ENA
rst => result[1].ENA
rst => result[0].ENA
vl[0] => Decoder1.IN7
vl[1] => Decoder1.IN6
vl[2] => Decoder1.IN5
vl[3] => Decoder1.IN4
hl[0] <= hl[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hl[1] <= hl[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hl[2] <= hl[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hl[3] <= hl[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[0] <= digit[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[1] <= digit[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[2] <= digit[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digit[3] <= digit[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= seg[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


